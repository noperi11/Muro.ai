#include <Arduino.h>
#include <WiFi.h>
#include <LittleFS.h>
#include <ESPAsyncWebServer.h>
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <DHT_U.h>
#include <LiquidCrystal_I2C.h>
#include <WiFi.h>

// ---- CONFIGURATION ----
const char* ssid = "UGMURO-IoT";
const char* password = "Esteh5000";

AsyncWebServer server(80);

#define DHTPIN 4//masukkan pin sensor DHT
#define DHTTYPE DHT21
#define RELAY1_PIN 26//masukkan pin relay 1
#define RELAY2_PIN 25//masukkan pin relay 2
#define RELAY3_PIN 17//masukkan pin relay 3
DHT dht(DHTPIN, DHTTYPE);
LiquidCrystal_I2C lcd(0x27, 20, 4);

float temperature, humidity;
int soilValue;


const int soilPin = 36; //masukkan pin sensor soil moisture
int soilPercentage;
void setup()
{
  Serial.begin(115200);
lcd.init();
lcd.backlight();
lcd.setCursor(3, 0);
lcd.print("Selamat Datang!");
lcd.setCursor(0, 1);
lcd.print("WS Agroteknologi IoT");
lcd.setCursor(3, 3);
lcd.print("-- UG MURO --");
delay(5000);
lcd.clear();
delay(2000);
pinMode(soilPin, INPUT);
dht.begin();
pinMode(RELAY1_PIN, OUTPUT);
pinMode(RELAY2_PIN, OUTPUT);
pinMode(RELAY3_PIN, OUTPUT);
// Initialize relays to OFF state
digitalWrite(RELAY1_PIN, HIGH); // HIGH to turn relay OFF
digitalWrite(RELAY2_PIN, HIGH); // HIGH to turn relay OFF
digitalWrite(RELAY3_PIN, HIGH); // HIGH to turn relay OFF
  if (!LittleFS.begin()) {
    Serial.println("LittleFS Mount Failed");
    return;
  }

  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected. IP: " + WiFi.localIP().toString());

  // Serve static files
  server.serveStatic("/", LittleFS, "/").setDefaultFile("index.html");

  // fan control
  server.on("/fan", HTTP_GET, [](AsyncWebServerRequest *request) {
    if (request->hasParam("state")) {
      String state = request->getParam("state")->value();
      digitalWrite(RELAY1_PIN, state == "1" ? HIGH : LOW);
      request->send(200, "text/plain", "OK");
    } else {
      request->send(400, "text/plain", "Missing state");
    }
  });

  // pump control
  server.on("/pump", HTTP_GET, [](AsyncWebServerRequest *request) {
    if (request->hasParam("state")) {
      String state = request->getParam("state")->value();
      digitalWrite(RELAY3_PIN, state == "1" ? HIGH : LOW);
      request->send(200, "text/plain", "OK");
    } else {
      request->send(400, "text/plain", "Missing state");
    }
  });

  // Sensor data endpoint
  server.on("/data", HTTP_GET, [](AsyncWebServerRequest *request) {
    String json = "{";
    json += "\"temperature\":" + String(temperature, 1) + ",";
    json += "\"humidity\":" + String(humidity, 1) + ",";
    json += "\"moisture\":" + String(soilPercentage);
    json += "}";

    request->send(200, "application/json", json);
  });

  server.begin();
}
void loop()
{
temperature = dht.readTemperature();
humidity = dht.readHumidity();
soilValue = analogRead(soilPin);
// Membaca nilai analog dari sensor
soilPercentage = map(soilValue, 4095, 0, 0, 100);
// pakai mapping 2048 untuk 3v, 4095 untuk 5v
soilPercentage = constrain(soilPercentage, 0, 100);
// Display data on LCD
lcd.setCursor(5, 0);
lcd.print("Monitoring");
lcd.setCursor(0, 1);
lcd.print("Suhu : ");
lcd.setCursor(8, 1);
lcd.print(temperature);
lcd.setCursor(17, 1);
lcd.print("C");
lcd.setCursor(0, 2);
lcd.print("K.Udara: ");
lcd.setCursor(8, 2);
lcd.print( humidity);
lcd.setCursor(17, 2);
lcd.print("%");
lcd.setCursor(0, 3);
lcd.print("K.Tanah: ");
lcd.setCursor(9, 3);
lcd.print(" "); //6 spasi
lcd.setCursor(9, 3);
lcd.print(soilPercentage);
lcd.setCursor(17, 3);
lcd.print("%");
// Algoritma untuk menyalakan relay
if (temperature > 24 && humidity > 70)
{
  digitalWrite(RELAY1_PIN, HIGH); // Relay 1 menyala
}
else
{
digitalWrite(RELAY1_PIN, LOW); // Relay 1 mati
}
if (soilPercentage < 30)
{
digitalWrite(RELAY3_PIN, HIGH); // Relay 2 (pompa) menyala
}
else
{
digitalWrite(RELAY3_PIN, LOW); // Relay 2 (pompa) mati
}
delay(1000);
}
